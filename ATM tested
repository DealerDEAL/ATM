#include <iostream>
#include <fstream>
using namespace std;

int account_id;
int pin_id;
int balance;
char newline;
bool login () {
	
	int givenAccount_id = -1;
	int givenPin_id = -1;
	bool isAccountInvalid = true;
	bool isPinInvalid = true;
	
	cout << "Welcome!" << endl;
	
	do {
	    FILE f;
		int account_valid
		cout << "Please enter your account id: ";
		if (scanf("%d%c" &givenAccount_id, &newline) givenAccount_id==0 || newline != '\n')
		cout << "error, Id is wrong\n try again";
		cin >> givenAccount_id;
		f = fopen("users_id.txt", "r");
		fscanf(users_id.txt, "%d%d", &account_id, account_valid);
		if (givenAccount_id == account_id) {
		    if(account_valid !=0 || account_id!=1)
		        cout<<"invalid id";
		 else{
			isAccountInvalid = false;}
		} else {
			cout << "Invalid account id! Try again." << endl;
		}
	}while (isAccountInvalid);

	do {
		FILE g;
		cout << "Enter your PIN: ";
		if (scanf("%d%c" &givenPin_id, &newline) givenPin_id==0 || newline != '\n')
		cout << "error, pin is wrong\n try again";
		cin >> givenPin_id;
		g=fopen("pin-codes.txt", "r");
		fscanf(pin_codes.txt,"%d", &pin_id);
		if (givenPin_id == pin_id) {
			isPinInvalid = false;
		} else {
		    for (int counter =0 , counter<3, counter++){
			cout << "Invalid PIN id! Try again." ;
		    }
		    return 0;
		}

	}while (isPinInvalid);

	return true;
		
}

int getUserOption () {

	int selectedOption = -1;
	bool select = true;
do{
	cout << "Main menu:" << endl;
	cout << "	1 - View my balance" << endl;
	cout << "	2 - Withdraw cash" << endl;
	cout << "	3 - Deposit funds" << endl;
	cout << "	4 - Exit" << endl;
	cout << "   5 - put it under a percentage"<<endl;
	cout << "   6 - Withdraw mayor card"<<endl;
	cout << "Enter a choice: " << endl;
	cin >> selectedOption;
	if(selectedOption ==0 || selectedOption>6||selectedOption<1);
	cout<<"wrong, retry ";
	else{
	  select= false;  
	}
	}
}while(select);
	return selectedOption;
	
}

void viewBalance () {
    FILE b;
    b = fopen("balances.txt", "r");
    fscanf(balances.txt,"%d", &balance)
	cout << "You have:" << endl;
	cout << "$" << balance << endl;

}

void withdrawCash() {
	
	int selectedOption = -1;
	int valueToWithdraw = 0;
	bool isNotFinished = true;

	do {
		
		cout << "Withdrawal options:" << endl;
		cout << "1 - $20" << endl;
		cout << "2 - $40" << endl;
		cout << "3 - $60" << endl;
		cout << "4 - $100" << endl;
		cout << "5 - $200" << endl;
		cout << "6 - cancel transaction" << endl;
		cout << "choose a withdrawal option (1-6)" << endl;

		cin >> selectedOption;
		switch (selectedOption) {
			case 1:
				valueToWithdraw = 20;
				break;
			case 2:
				valueToWithdraw = 40;
				break;
			case 3:
				valueToWithdraw = 60;
				break;
			case 4:
				valueToWithdraw = 100;
				break;
			case 5:
				valueToWithdraw = 200;
				break;
			case 6:
				isNotFinished = false;
				break;
			default:
				cout << "Invalid option! Try again." << endl;
				break;
		} 
		
		if (valueToWithdraw != 0) {
			if (valueToWithdraw > balance) {
				cout << "You just have $" << balance << ". You can't withdraw $" << valueToWithdraw << endl;
			} else {
				balance = balance - valueToWithdraw;
				isNotFinished = false;
			}
			valueToWithdraw = 0;
		}

	} while (isNotFinished);	

}

void depositFunds() {

	int selectedOption = -1;	
	bool isNotFinished = true;

	do {
		
		cout << "Deposit options:" << endl;
		cout << "1 - $20" << endl;
		cout << "2 - $40" << endl;	
		cout << "3 - $60" << endl;
		cout << "4 - $100" << endl;
		cout << "5 - $200" << endl;
		cout << "6 - cancel transaction" << endl;
		cout << "choose a deposit option (1-6)" << endl;

		cin >> selectedOption;
		switch (selectedOption) {
			case 1:
				balance = balance + 20;
				isNotFinished = false;
				break;
			case 2:
				balance = balance + 40;
				isNotFinished = false;
				break;
			case 3:
				balance = balance + 60;
				isNotFinished = false;
				break;
			case 4:
				balance = balance + 100;
				isNotFinished = false;
				break;
			case 5:
				balance = balance + 200;
				isNotFinished = false;	
				break;
			case 6:
				isNotFinished = false;
				break;
			default:
				cout << "Invalid option! Try again." << endl;
				break;
		} 
		
	} while (isNotFinished);

void PutItUnder_a_Percentage(){
    int percentage_balance;
    int amount;
    int storeg_time;
    cout<<"enter the amount you want to deposit";
    cout<<"percentage = 3";
    cin<<amount;
    cout<<"enter the storeg time";
    cin<<storeg_time;
    for(int BasikStoregTime = 0, BasikStoregTime<storeg_time, BasikStoregTime++){
    amount = amount+((amount/100)*3)
    }
    percentage_balance=amount
    cout<<"you will receive";
    cout<<"$"<<percentage_balance;
    
}


void WithdrawMayorCard(){
    cout<<"the police have come for you soon, wait";
    return 0;
}

}

int main () {
				
	if (login()) {
		
		int isNotFinished = true;

		do {
			
			switch (getUserOption()) {
				case 1:
					viewBalance();
					break;
				case 2:
					withdrawCash();
					break;
				case 3:
					depositFunds();
					break;
				case 4:
					isNotFinished = false;
					break;
				default:
					cout << "Invalid option! Try again." << endl;
					break;
			}

		} while (isNotFinished);

	}

	return 0;

}
